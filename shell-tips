a2disconf <ConfName> = disable an Apache2 configuration file
a2dismod <ModuleName> = disable an Apache2 module
a2dissite <SiteName> = disable an Apache site
a2enconf <ConfName> = enable an Apache2 configuration file
a2enmod <ModuleName> = enable an Apache2 module
a2ensite <SiteName> = enable an Apache site
ab -n 100 -c 10 <URL> = Apache HTTP server benchmarking tool (100 requests, 10 concurrent)
acpi -V = show advanced configuration and power interface information
addgroup <GroupName> = add a group
addr2line -e <BinaryFile> <Address> = convert addresses into file names and line numbers
adduser <UserName> = add a user
alternatives --config <Command> = configure alternatives for various commands
apt dist-upgrade = intelligently handle changing dependencies with new versions
apt install <PackageName> = install package (and dependencies)
apt list --upgradable = list packages that can be upgraded
apt-cache depends <PackageName> = show dependencies for a package
apt-cache policy <PackageName> = show installation candidate and package priorities
apt-cache rdepends <PackageName> = show reverse dependencies for a package
apt-cache search <Pattern> = search package descriptions
apt-cache show <PackageName> = display detailed package information
apt-get build-dep <PackageName> = configure build-dependencies for source packages
apt-key add <KeyFile> = add GPG key from a file
apt-key del <KeyID> = remove GPG key
apt-key list = list trusted keys
ar t <ArchiveFile> = list contents of an archive
arch = print machine architecture
arp -a = show ARP cache entries
arping -I <Interface> <IPAddress> = ping a host on a network interface using ARP
as <SourceFile> -o <OutputFile> = GNU assembler
aspell check <FileName> = interactive spell checker
at now + 1 hour = schedule a job to run in one hour
atd = run jobs queued by the at command
awk 'pattern {action}' <FileName> = pattern scanning and processing
badblocks -v <Device> = test for bad blocks on disk
banner <Text> = print large banner
base64 -d <FileName> = decode base64 file
base64 <FileName> = encode file to base64
batch = schedule commands when system load permits
bc = command-line calculator
beep = make a beep sound
bind -p = display all readline bindings
blkid = locate/print block device attributes
bmon = bandwidth monitor and rate estimator
bootctl status = show EFI boot manager status
break = exit from a loop in a shell script
btop = resource monitor, interactive
buildah = tool for building OCI container images
cal = display calendar
calc <Expression> = command-line calculator (complex expressions)
cat /proc/cpuinfo = show CPU information
cat /proc/meminfo = show memory information
cat /proc/version = show kernel version
cat <File> = display file contents
certbot --apache = get certificate using Apache plugin
certbot renew = renew all certificates
certificates = manage HTTPS certificates
chage -l <UserName> = show password aging information
chattr +i <FileName> = make file immutable
chcon -t <Type> <FileName> = change SELinux security context of file
checkinstall = track installation of local software
checksec <BinaryFile> = checks security properties of ELF executables
chfn <AccountName> = change user's finger information
chgrp <GroupName> <FileName> = change group ownership
chmod 755 <File> = change file permissions
chown <User>:<Group> <File> = change file ownership
chpasswd = update passwords in batch mode
chroot <Directory> <Command> = run command with a different root directory
chsh -s <Shell> <AccountName> = change login shell
cksum <FileName> = calculate CRC checksums
clang <SourceFile> -o <OutputFile> = C, C++, and Objective-C compiler
clang++ <SourceFile> -o <OutputFile> = C++ compiler
cloc <Directory> = count lines of code
cmake . = generate build files from CMakeLists.txt
cmatrix = show a scrolling Matrix screen in the terminal
cmp <File1> <File2> = compare two files byte by byte
col -b < <FileName> = filter out backspace characters
colcrt <FileName> = filter nroff output for CRT previewing
colordiff <File1> <File2> = diff with color output
column -t <FileName> = columnate text
convert <InputImage> <OutputImage> = convert between image formats
cowsay <Message> = display message using ASCII cow
cp -u <Source> <Destination> = copy only when source is newer
cpio -i < <ArchiveFile> = extract cpio archive
cpupower frequency-info = show CPU frequency information
cron-apt = automated apt updates via cron
crontab -e = edit crontab file
crontab -l = list crontab entries
cryptsetup luksOpen <Device> <Name> = open encrypted LUKS volume
csplit <FileName> /<Pattern>/ {<Count>} = split file based on context
ctags -R = generate tag file for source code
curl -I <URL> = get headers only
curl -L <URL> = follow redirects
curl -X POST <URL> = send POST request
curl cheat.sh/<Command> = get cheat sheet for command
cut -d: -f1 /etc/passwd = extract first field from file using delimiter
daemon <Command> = run command as a daemon
date -d "next Friday" = display date for next Friday
dconf dump / = dump entire dconf database
dconf editor = graphical editor for dconf database
dd bs=4M if=<InputFile> of=<OutputFile> status=progress = copy and convert file with progress
dd if=/dev/zero of=<File> bs=1M count=100 = create 100MB empty file
debconf-show <PackageName> = show package configuration
deborphan = list library packages with no dependencies
debugfs <Device> = interactive ext2/ext3/ext4 filesystem debugger
deluser <UserName> = delete a user
df -h = display disk space usage in human-readable format
df -i = show inode usage
dhclient <Interface> = obtain or renew DHCP lease
dialog --msgbox "<Text>" 10 40 = create text dialog box
diff -u <File1> <File2> = unified diff
dig +short <Domain> = DNS lookup with short output
dig -x <IPAddress> = reverse DNS lookup
dig @<NameServer> <Domain> <Type> = query specific DNS server
disown -a = remove all jobs from current shell
dmesg -H = display kernel messages with human-readable timestamps
dmesg -T = display kernel messages with human-readable timestamps
dmesg -l err = show only error messages
dmidecode -t memory = display memory hardware information
dmidecode -t system = display system hardware information
dnf check-update = check for package updates
dnf history = view transaction history
dnf install <PackageName> = install package
dnf list installed = list installed packages
dnf search <Pattern> = search for packages
dnf update = update packages
docker build -t <Name> . = build Docker image from Dockerfile
docker exec -it <ContainerName> <Command> = run command inside container
docker images = list Docker images
docker ps = list running containers
docker run -d <ImageName> = run Docker container in background
docker stats = display container resource usage
dos2unix <FileName> = convert DOS to Unix text file format
dpkg --get-selections = show installed packages
dpkg -L <PackageName> = list files installed by package
dpkg -S <Path> = find which package owns a file
dpkg -l | grep ^rc = list packages removed but not purged
dpkg -r <PackageName> = remove package, leaving config files
dpkg -x <PackageFile> <Directory> = extract files from package
dropbearkey -t rsa -f <KeyFile> = generate RSA key for dropbear SSH
du -sh <Directory> = display directory space usage
dumpe2fs <Device> = dump ext2/ext3/ext4 filesystem information
e2fsck -f <Device> = force check of ext2/ext3/ext4 filesystem
edquota <AccountName> = edit user quotas
efibootmgr = manipulate EFI boot manager
eject = eject removable media
env = display environment variables
espeak "<Text>" = text-to-speech engine
ethtool <Interface> = display or change Ethernet card settings
eval <Command> = evaluate commands
exec <Command> = execute command replacing current process
exit = exit the shell
expand <FileName> > <OutputFile> = convert tabs to spaces
export <Variable>=<Value> = set environment variable
factor <Number> = print prime factors
faillog -a = show all login failures
fallocate -l 10G <FileName> = create sparse file
fdupes <Directory> = find duplicate files
fg %<JobNumber> = bring specific job to foreground
file -i <FileName> = determine file type and encoding
file -z <ArchiveFile> = look into compressed files
find . -perm 777 = find files with permission 777
find . -type d -empty = find empty directories
find . -xdev = stay on one filesystem
fmt -w 80 <FileName> = reformat file to 80 columns
fold -s <FileName> = wrap lines at spaces
fortune = print random quote
free -m = display memory usage in megabytes
fsck.ext4 <Device> = check ext4 filesystem
fstrim -av = trim all mounted filesystems
function <Name>() { <Commands>; } = define a bash function
fuser -k <FileOrDir> = kill processes accessing a file
fuser -m <FileOrDir> = identify processes using files or directories
g++ -g <SourceFile> -o <OutputFile> = compile with debugging symbols
g++ <SourceFile> -o <OutputFile> = compile C++ program
gawk 'pattern {action}' <FileName> = pattern scanning and processing
gcc -O2 <SourceFile> -o <OutputFile> = compile with optimization
gcc -Wall <SourceFile> -o <OutputFile> = compile with all warnings
gcc -c <SourceFile> = compile without linking
gcc -g <SourceFile> -o <OutputFile> = compile with debugging symbols
gdb <Program> = GNU debugger
getenforce = display current SELinux mode
getent hosts <HostName> = look up host in name service
getfacl <FileName> = display file access control lists
getopt <Options> <Arguments> = parse command options
ghostscript <PSFile> = PostScript/PDF interpreter
gimp <FileName> = GNU Image Manipulation Program
git add <FileName> = add file to Git staging area
git bisect start = start binary search for bug
git branch = list Git branches
git checkout <BranchName> = switch to branch
git cherry-pick <CommitHash> = apply changes from specific commit
git clone <Repository> = clone Git repository
git commit -m "<Message>" = commit changes with message
git diff = show changes between commits
git init = initialize new Git repository
git log = show commit logs
git pull = fetch and merge remote changes
git push = push changes to remote repository
git rebase -i HEAD~3 = interactive rebase of last 3 commits
git remote -v = show remote repositories
git reset --hard HEAD = discard all local changes
git stash = stash changes temporarily
git status = show working tree status
gpg --decrypt <FileName> = decrypt file
gpg --encrypt <FileName> = encrypt file
gpg --gen-key = generate GPG key pair
gpg --list-keys = list GPG keys
gpg --sign <FileName> = sign file
gpgv <SignatureFile> <DataFile> = verify signature
grep -A 3 <Pattern> <FileName> = show 3 lines after match
grep -B 3 <Pattern> <FileName> = show 3 lines before match
grep -C 3 <Pattern> <FileName> = show 3 lines around match
grep -F <Pattern> <FileName> = search for fixed strings
grep -c <Pattern> <FileName> = count matching lines
grep -l <Pattern> <Files> = list only filenames containing matches
grep -v <Pattern> <FileName> = invert match
grep -w <Pattern> <FileName> = match whole words only
groff -man <ManPage> = format manual page
groupadd <GroupName> = create a new group
groupdel <GroupName> = delete a group
groupmems -g <Group> -a <User> = add user to group
groupmems -g <Group> -l = list members of a group
groups <UserName> = show groups user belongs to
grpck = verify integrity of group files
gs -dNOPAUSE -sDEVICE=pdfwrite -sOUTPUTFILE=<OutputFile> <InputFile> = convert to PDF
gzip -9 <FileName> = compress with maximum compression
gzip -d <FileName> = decompress file
gzip -l <FileName> = show compression information
gzip -t <FileName> = test compressed file integrity
halt -p = power off the system
hdparm -I <Device> = show device information
hdparm -tT <Device> = perform disk read benchmark
head -c <Bytes> <FileName> = show first bytes of file
hexdump -C <FileName> = canonical hex+ASCII display
hexedit <FileName> = edit file in hex mode
history = display command history
host <DomainName> = DNS lookup utility
hostname -I = show all network addresses
hostname -f = show fully qualified domain name
hostname = show or set system hostname
hostnamectl set-hostname <n> = set system hostname
htop = interactive process viewer
hwclock --show = display hardware clock
hwclock --systohc = set hardware clock from system time
hwinfo = hardware information tool
iconv -f <FromEncoding> -t <ToEncoding> <FileName> = convert file encoding
id -G <User> = show group IDs
id -u <User> = show user ID
ifdown <Interface> = take down network interface
iftop = display bandwidth usage
ifup <Interface> = bring up network interface
import -window root <FileName> = capture screenshot
info <Command> = display command documentation
insmod <ModuleFile> = insert module into kernel
install <SourceFile> <DestFile> = copy files and set attributes
iostat -d 2 = display I/O statistics every 2 seconds
iostat -m = display I/O statistics in MB/s
ip link set <Interface> up = bring interface up
ip link show = show network interfaces
ip neighbor show = show ARP cache
ip route add <Network> via <Gateway> = add static route
ip route del <Network> = delete route
ip route show = show routing table
iperf3 -c <Server> = network bandwidth measurement tool (client)
iperf3 -s = network bandwidth measurement tool (server)
iptables -A INPUT -p tcp --dport 22 -j ACCEPT = allow SSH
iptables -F = flush all rules
iptables -L = list firewall rules
iptables -P INPUT DROP = set default policy
iptraf = interactive network statistics viewer
iw dev <Interface> scan = scan for wireless networks
iwconfig <Interface> = configure wireless network interface
iwlist <Interface> scan = scan for wireless networks
java -jar <JarFile> = run Java JAR file
javac <SourceFile> = compile Java program
jobs -l = list jobs with PID
journalctl -b = show logs from current boot
journalctl -f = follow journal logs
journalctl -u <Unit> = show logs for systemd unit
jq '.' <JSONFile> = pretty-print JSON
jq '.field' <JSONFile> = extract field from JSON
k3s = lightweight Kubernetes
kernel-install add <KernelVersion> <KernelImage> = install kernel
kill -9 <PID> = forcefully kill process
killall <ProcessName> = kill processes by name
killall5 = kill all processes except kernel processes
kmod list = list loaded kernel modules
kubectl apply -f <YAMLFile> = apply Kubernetes manifest
kubectl get pods = list Kubernetes pods
kubectl get services = list Kubernetes services
lame <InputFile> <OutputFile> = MP3 encoder
last -n 20 = show last 20 logins
lastb = show failed login attempts
lastlog = show last login of users
lcov --capture --directory . = generate code coverage report
less +/<Pattern> <FileName> = start less searching for pattern
locate -i <Pattern> = case-insensitive search
logger "<Message>" = send message to system log
login <UserName> = change user
logname = print name of current user
logrotate -f <ConfigFile> = force log rotation
look <Prefix> = display lines beginning with a prefix
lorem = generate Lorem Ipsum text
ls -1 = list one file per line
ls -F = classify files
ls -S = sort by file size
ls -X = sort by extension
ls -i = show inode numbers
ls -r = reverse order
ls -t = sort by modification time
ls -u = sort by access time
lsattr <FileName> = list file attributes on Linux second extended filesystem
lsb_release -a = display Linux Standard Base information
lscpu = display information about CPU architecture
lshw = list hardware
lslocks = list local system locks
lsmod = list loaded kernel modules
lsns = list namespaces
lsof +D <Directory> = list files open in directory
lsof -i :22 = list processes using port 22
lsof -i TCP = list processes using TCP
lsof -p <PID> = list files opened by process
lsof -u <UserName> = list files opened by user
lspci -v = display PCI devices verbosely
lsusb -v = display USB devices verbosely
ltrace -c <Command> = count time, calls for routines
ltrace <Command> = library call tracer
lvcreate -L 10G -n <LogicalVolume> <VolumeGroup> = create logical volume
lvdisplay = display logical volumes
lvextend -r -L +10G <LogicalVolume> = extend logical volume
lvmdiskscan = scan for LVM physical volumes
lvremove <LogicalVolume> = remove logical volume
lvrename <OldName> <NewName> = rename logical volume
lvresize -r -L 20G <LogicalVolume> = resize logical volume
lxc-attach -n <ContainerName> = attach to container
lxc-create -t <Template> -n <Name> = create container
lxc-destroy -n <Name> = destroy container
lxc-ls = list containers
lxc-start -n <Name> = start container
lxc-stop -n <Name> = stop container
lynx <URL> = text browser
m4 <FileName> = macro processor
mail -s "Subject" <Recipient> = send email
make -j4 = make with 4 parallel jobs
make clean = clean up build files
make install = install after building
make test = run tests
man -k <Keyword> = search manpages for keyword
man -wK <Keyword> = search manpages for keyword and show files
man 5 <File> = show file format manual
mandb = create or update manual page index caches
mcookie = generate random cookie for X session
md5sum <File> = compute MD5 message digest
mdadm --create <Device> --level=raid1 --raid-devices=2 <Devices> = create RAID array
mdadm --detail <Device> = show RAID array details
mdadm --manage <Device> --add <NewDevice> = add device to RAID
mdadm --query <Device> = query RAID device
mdadm --stop <Device> = stop RAID array
mesg n = disable receiving messages
mesg y = allow receiving messages
mii-tool <Interface> = check network interface status
mkdir -p <Directory> = create directory and parents if needed
mke2fs -t ext4 <Device> = create ext4 filesystem
mkfs.btrfs <Device> = create btrfs filesystem
mkfs.ext4 <Device> = create ext4 filesystem
mkfs.fat <Device> = create FAT filesystem
mkfs.ntfs <Device> = create NTFS filesystem
mkswap <Device> = set up a Linux swap area
modprobe <ModuleName> = add and remove modules from the Linux kernel
mount -o remount,rw / = remount root filesystem as read-write
mount -t ext4 <Device> <Directory> = mount filesystem
mpstat = report processors related statistics
mtr <Host> = network diagnostic tool
mv <Source> <Destination> = move or rename files
ncdu = NCurses Disk Usage
netstat -antp = show all network connections with PIDs
netstat -tulpn = show listening ports and processes
nice -n 19 <Command> = run command with low priority
nl <File> = number lines in a file
nl <File> = number lines in file
nload = monitor network traffic and bandwidth usage
nmap -sP 192.168.1.0/24 = scan network for hosts
nohup <Command> & = run command immune to hangups
notify-send "<Title>" "<Message>" = send desktop notification
npm install = install Node.js package dependencies
npm start = start Node.js application
oathtool --totp -b <Secret> = generate TOTP code
objdump -d <BinaryFile> = display assembler contents of executable sections
od -x <File> = dump file in octal and other formats
openssl genrsa -out private.key 2048 = generate RSA private key
openssl req -new -key private.key -out cert.csr = create certificate signing request
openssl s_client -connect <Host>:443 = test SSL/TLS connection
openssl x509 -in cert.pem -text = display certificate information
parallel <Command> :::: <InputFile> = run commands in parallel
parted <Device> print = display partition table
passwd <UserName> = change user password
paste <File1> <File2> = merge lines of files
patch < <PatchFile> = apply a diff file to an original
pdfgrep <Pattern> <PDFFile> = search pattern in PDF files
pdftk <Input> cat <Pages> output <Output> = manipulate PDF files
perf record -a -g = record system performance data
perf report = display performance report
perl -e '<Code>' = execute Perl code
pgrep <Pattern> = find processes by name
ping -c 4 <Host> = send ICMP echo requests
pkill <Pattern> = signal processes by name
pmap <PID> = report memory map of process
podman build -t <Name> . = build container image
podman images = list container images
podman ps = list running containers
podman run -d <ImageName> = run container in background
poweroff = power off the system
printf "Format" <Arguments> = formatted output
ps aux = show all processes
pstree = display process tree
pushd <Directory> = push directory onto stack
pv <File> = monitor progress of data through a pipe
pvdisplay = display physical volumes
pvs = report information about physical volumes
pwck = verify integrity of password files
pwgen 12 1 = generate random password
python3 <Script> = run Python script
qemu-img create -f qcow2 <ImageName> 10G = create virtual disk image
qemu-system-x86_64 -hda <Image> -m 2048 = run virtual machine
readlink -f <File> = follow symlinks recursively
realpath <File> = print resolved path
reboot = reboot the system
recode <FromEncoding>..<ToEncoding> <File> = convert file between charsets
rename 's/old/new/' <Files> = rename files using Perl expressions
renice +10 -p <PID> = change priority of running process
reset = reset terminal
resize2fs <Device> = resize ext2/ext3/ext4 filesystem
rev <File> = reverse lines of file
rig = random identity generator
rm -rf <Directory> = recursively remove directory
rmmod <ModuleName> = remove a module from the Linux kernel
route -n = display routing table
rsync -av <Source> <Destination> = synchronize files and directories
ruby <Script> = run Ruby script
rust-gdb <Program> = Rust GDB debugging
sar -n DEV 1 = report network statistics every second
sar -u 2 5 = report CPU utilization every 2 seconds, 5 times
screen = terminal multiplexer
sed 's/old/new/g' <File> = stream editor for filtering and transforming text
sed -i 's/old/new/g' <File> = edit files in place
setenforce 0 = set SELinux to permissive mode
setenforce 1 = set SELinux to enforcing mode
setfacl -m u:<User>:rwx <File> = modify file ACL
sha1sum <File> = compute SHA1 message digest
sha256sum <File> = compute SHA256 message digest
shutdown -h now = shut down the system
shutdown -r now = reboot the system
slabtop = display kernel slab cache information
smartctl -a /dev/sda = show SMART disk information
sort -r <File> = sort lines in reverse order
source <Script> = execute commands from file
spell <File> = find spelling errors
spell <File> = report misspelled words
split -b 1M <File> = split file into pieces
sqlite3 <Database> = command-line interface for SQLite
ss -tuln = show socket statistics
ssh <User>@<Host> = connect to host via SSH
ssh-copy-id <User>@<Host> = install SSH key on remote host
ssh-keygen -t rsa = generate SSH key pair
ssh-keyscan <Host> = gather SSH public keys
sshfs <User>@<Host>:<RemoteDir> <LocalDir> = mount remote filesystem
stat <File> = display file status
strace -c <Command> = summarize system call time, calls, and errors
strace <Command> = trace system calls and signals
stress --cpu 4 --io 2 --vm 1 --timeout 60s = stress test system
su - <UserName> = switch user
sudo -l = list allowed commands
sudo -u <User> <Command> = run command as another user
sudo <Command> = execute command as another user
sum <File> = checksum and count blocks in file
swapoff -a = disable all swap devices
swapon -a = enable all swap devices
symlinks -r <Directory> = scan for symlinks
sync = flush filesystem buffers
sysctl -a = display all kernel parameters
systemctl disable <Service> = disable service from starting at boot
systemctl enable <Service> = enable service to start at boot
systemctl list-unit-files = list all systemd unit files
systemctl reload <Service> = reload service configuration
systemctl restart <Service> = restart service
systemctl start <Service> = start service
systemctl status <Service> = check service status
systemctl stop <Service> = stop service
tac <File> = concatenate and print files in reverse
tail -f <File> = output appended data as file grows
tar -cf <Archive.tar> <Files> = create tar archive
tar -czf <Archive.tar.gz> <Files> = create compressed tar archive
tar -xf <Archive.tar> = extract tar archive
tar -xzf <Archive.tar.gz> = extract compressed tar archive
tcpdump -i <Interface> = capture network traffic
tee <File> = read from stdin and write to stdout and files
test -f <File> && echo "Exists" = test file existence
timeout 10s <Command> = run command with time limit
tload = graphical representation of system load average
top = display Linux processes
touch <File> = update file timestamps or create empty file
tr 'a-z' 'A-Z' < <File> = translate characters
traceroute <Host> = print route packets trace to host
truncate -s 0 <File> = truncate file to given size
tty = print filename of terminal on stdin
tune2fs -l <Device> = list filesystem parameters
umask 022 = set default file permissions
umount <MountPoint> = unmount filesystem
uname -a = print system information
uniq -c <File> = count repeated lines
units <Value> <FromUnit> <ToUnit> = unit conversion
units <from> <to> = unit conversion
unzip <File.zip> = extract zip archive
update-alternatives --config <Command> = configure alternative for command
update-grub = update GRUB bootloader configuration
uptime = show how long system has been running
useradd -m <UserName> = create user with home directory
userdel -r <UserName> = delete user and their home directory
usermod -aG <Group> <User> = add user to group
uuidgen = generate a UUID
valgrind --leak-check=full <Program> = check for memory leaks
vgcreate <VolumeGroup> <PhysicalVolumes> = create volume group
vgdisplay = display volume groups
vgs = report information about volume groups
virsh list = list virtual machines
virsh shutdown <VM> = shutdown virtual machine
virsh start <VM> = start virtual machine
virt-clone --original <VM> --name <NewVM> --auto-clone = clone VM
virt-install --name <VM> --ram 2048 --disk path=<Image> = create VM
virt-manager = graphical virtual machine manager
vmstat 1 = report virtual memory statistics
w = show who is logged on and what they are doing
wall "<Message>" = send message to all users
watch -n 1 <Command> = execute command periodically
wc -l <File> = count lines in file
webpack --mode production = bundle JavaScript files for production
whatis <Command> = display one-line manual page descriptions
whereis <Command> = locate binary, source, and manual page for command
which <Command> = show full path of commands
who = show who is logged on
whoami = print effective userid
whois <Domain> = lookup WHOIS information
wipe <File> = securely erase files
xargs -n1 <Command> = execute command with arguments from standard input
xclock = display analog/digital clock
xdg-open <File> = open file with default application
xdotool key alt+Tab = simulate keyboard input
xxd <File> = make hexdump or reverse
xz -d <File.xz> = decompress xz file
yes <String> = output string repeatedly
zcat <File.gz> = view compressed files
zip -r <Archive.zip> <Directory> = create zip archive recursively
